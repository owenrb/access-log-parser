<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        ">
	
    <!-- Scans for components that will be auto-registered as Spring beans -->
    <context:component-scan base-package="com.ef.orm.service" />
    <!-- Scans for repositories that will be auto-registered -->
    <jpa:repositories base-package="com.ef.orm.repository" />
    <!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
    <context:annotation-config />
    
    <!-- properties placeholders -->
	<context:property-placeholder 
		location="classpath:jdbc.properties,
				  classpath:appconfig.properties"
	    ignore-unresolvable="true"/>
	<util:properties id="reason" location="classpath:reason.properties"/>
    
    <!-- ##### JPA::START ##### -->
    
    <!-- Datasource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>


    <!-- EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
            p:packagesToScan="com.ef.orm.model"
            p:dataSource-ref="dataSource">
        <property name="jpaVendorAdapter">
        		<!-- re/creates the schema, destroy previous data -->
            <bean class="com.ef.orm.adapter.MyHibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="false" />
            </bean>
        </property>
    </bean>

    <!-- Transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <!-- ##### JPA::END ##### -->	
    
    <!-- ##### Application Specific ##### -->
    
    <bean id="inputReader" class="com.ef.reader.InputReader">
    	    <!-- read from system input -->
    	    <!--  
    		<property name="inputType" value="SYSTEMIN" />
    		-->
    		
    		<!-- read from file-system -->
    		<!-- 
    		<property name="inputType" value="FILEPATH" />
    		<property name="path" value="/Users/owenrb/dev/containers/httpd-owenrb/logs/access.log" />
    		-->
    		
    		<!-- read from project's resource path -->
    		<property name="inputType" value="CLASSPATH" />
    		<property name="path" value="/sample/access.log" />
    		
    </bean>
    
    <bean id="logDateFormatter" class="java.text.SimpleDateFormat">
    		<constructor-arg><value>${appconfig.logdateformat}</value></constructor-arg>
    </bean>
    <bean id="argDateFormatter" class="java.text.SimpleDateFormat">
    		<constructor-arg><value>${appconfig.argdateformat}</value></constructor-arg>
    </bean>
    
    <bean id="parser" class="com.ef.Parser" />
    
	<bean id="parserService" class="com.ef.service.ParserService">
		<property name="logformat" value="${appconfig.logformat}" />
		<property name="separator" value="|" />
		<property name="dir2regex">
			<map>
				<entry key="t" value="\[(.+)\]" />
			</map>
		</property>
	</bean>

</beans>